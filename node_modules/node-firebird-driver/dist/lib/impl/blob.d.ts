import { AbstractAttachment } from './attachment';
import { Blob, BlobSeekWhence, BlobStream } from '..';
/** AbstractBlobStream implementation. */
export declare abstract class AbstractBlobStream extends BlobStream {
    attachment: AbstractAttachment;
    protected constructor(blob: Blob, attachment: AbstractAttachment);
    get length(): Promise<number>;
    close(): Promise<void>;
    cancel(): Promise<void>;
    seek(offset: number, whence?: BlobSeekWhence): Promise<number>;
    read(buffer: Buffer): Promise<number>;
    write(buffer: Buffer): Promise<void>;
    protected abstract internalGetLength(): Promise<number>;
    protected abstract internalClose(): Promise<void>;
    protected abstract internalCancel(): Promise<void>;
    protected abstract internalSeek(offset: number, whence?: BlobSeekWhence): Promise<number>;
    protected abstract internalRead(buffer: Buffer): Promise<number>;
    protected abstract internalWrite(buffer: Buffer): Promise<void>;
}
