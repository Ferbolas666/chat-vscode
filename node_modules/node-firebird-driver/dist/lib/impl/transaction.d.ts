import { AbstractAttachment } from './attachment';
import { Transaction } from '..';
/** AbstractTransaction implementation. */
export declare abstract class AbstractTransaction implements Transaction {
    attachment?: AbstractAttachment | undefined;
    protected constructor(attachment?: AbstractAttachment | undefined);
    /** Commits and release this transaction object. */
    commit(): Promise<void>;
    /** Commits and maintains this transaction object for subsequent work. */
    commitRetaining(): Promise<void>;
    /** Rollbacks and release this transaction object. */
    rollback(): Promise<void>;
    /** Rollbacks and maintains this transaction object for subsequent work. */
    rollbackRetaining(): Promise<void>;
    get isValid(): boolean;
    private check;
    protected abstract internalCommit(): Promise<void>;
    protected abstract internalCommitRetaining(): Promise<void>;
    protected abstract internalRollback(): Promise<void>;
    protected abstract internalRollbackRetaining(): Promise<void>;
}
